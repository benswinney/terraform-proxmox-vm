# Proxmox Connection Configuration
proxmox_api_url          = "https://your-proxmox-server:8006/api2/json"
proxmox_api_token_id     = "terraform@pve!terraform"
proxmox_api_token_secret = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
proxmox_tls_insecure     = true
proxmox_parallel         = 1
proxmox_timeout          = 300

# ========================================
# MULTI-VM CONFIGURATION (Recommended)
# ========================================

# Global defaults that apply to all VMs unless overridden
global_defaults = {
  target_node     = "proxmox-node-01"
  template_name   = "ubuntu-22.04-template"
  cpu_cores       = 2
  cpu_sockets     = 1
  cpu_type        = "host"
  memory          = 4096
  balloon         = 0
  disk_size       = "30G"
  disk_type       = "scsi"
  disk_storage    = "local-lvm"
  disk_format     = "raw"
  disk_cache      = "none"
  disk_iothread   = true
  network_model    = "virtio"
  network_bridge   = "vmbr0"
  network_tag      = null
  network_firewall = false
  os_type         = "cloud-init"
  qemu_os         = "l26"
  cloudinit_cdrom_storage = "local-lvm"
  ci_user                 = "ubuntu"
  ci_password             = ""  # Leave empty to use SSH keys only
  ci_ssh_keys = [
    "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC... your-public-key-here",
    # Add additional SSH keys as needed
  ]
  ci_ssh_private_key = ""  # Path to private key for provisioning
  nameserver    = "8.8.8.8"
  searchdomain  = "local"
  onboot     = true
  startup    = ""
  protection = false
  hotplug    = "network,disk,usb"
  agent      = 1
  tags       = "terraform,managed"
}

# Individual VM configurations
vms = {
  # Web server with custom specs
  "web-01" = {
    name        = "web-server-01"
    description = "Web server - Frontend"
    vmid        = 101
    # Uses global defaults for most settings, custom for specific needs
    memory      = 8192  # Override: More memory for web server
    disk_size   = "50G" # Override: Larger disk for web content
    ipconfig0   = "ip=192.168.1.101/24,gw=192.168.1.1"
    tags        = "web,frontend,production"
  }

  # Database server on different node
  "db-01" = {
    name          = "database-01"
    description   = "Database server - PostgreSQL"
    target_node   = "proxmox-node-02"  # Override: Different node
    template_name = "ubuntu-22.04-db-template"  # Override: Database-specific template
    vmid          = 102
    cpu_cores     = 4      # Override: More CPU for database
    memory        = 16384  # Override: More memory for database
    disk_size     = "100G" # Override: Large disk for data
    disk_storage  = "fast-ssd"  # Override: SSD storage for performance
    ipconfig0     = "ip=192.168.1.102/24,gw=192.168.1.1"
    tags          = "database,backend,production"
  }

  # Development server with minimal resources
  "dev-01" = {
    name        = "dev-server-01"
    description = "Development server"
    vmid        = 103
    # Uses mostly global defaults with minimal overrides
    cpu_cores   = 1     # Override: Less CPU for dev
    memory      = 2048  # Override: Less memory for dev
    disk_size   = "20G" # Override: Smaller disk for dev
    ipconfig0   = "dhcp" # Override: DHCP for flexibility
    tags        = "development,testing"
    protection  = false  # Override: Allow easy destruction
  }

  # Load balancer with specific network config
  "lb-01" = {
    name            = "load-balancer-01"
    description     = "HAProxy Load Balancer"
    template_name   = "haproxy-template"  # Override: Specific template
    vmid            = 104
    network_tag     = 100  # Override: VLAN tag for load balancer
    network_bridge  = "vmbr1"  # Override: Different bridge
    ipconfig0       = "ip=192.168.100.10/24,gw=192.168.100.1"
    nameserver      = "192.168.100.1"  # Override: Custom DNS
    searchdomain    = "internal.local"  # Override: Custom search domain
    tags            = "loadbalancer,network,production"
  }

  # Monitoring server with custom cloud-init
  "monitor-01" = {
    name        = "monitoring-01"
    description = "Prometheus & Grafana monitoring"
    vmid        = 105
    memory      = 8192
    disk_size   = "80G"
    ci_user     = "monitoring"  # Override: Custom user
    ci_ssh_keys = [  # Override: Specific SSH keys for monitoring
      "ssh-ed25519 AAA... monitoring-key-here"
    ]
    ipconfig0   = "ip=192.168.1.105/24,gw=192.168.1.1"
    tags        = "monitoring,prometheus,grafana"
  }
}

# ========================================
# LEGACY SINGLE-VM CONFIGURATION 
# (For backward compatibility - not recommended for new deployments)
# ========================================

# Uncomment these lines if you want to use the legacy single-VM approach
# NOTE: If 'vms' variable is defined above, these will be ignored

# vm_name         = "terraform-vm-01"
# vm_description  = "Ubuntu VM created with Terraform"
# target_node     = "proxmox-node-01" 
# template_name   = "ubuntu-22.04-template"

# ========================================
# EXAMPLE: Different VM Types
# ========================================

# Uncomment and modify one of these examples:

# Example 1: Simple 3-VM setup (web, app, db)
# vms = {
#   "web" = {
#     name = "web-server"
#     vmid = 101
#     ipconfig0 = "ip=192.168.1.101/24,gw=192.168.1.1"
#   }
#   "app" = {
#     name = "app-server" 
#     vmid = 102
#     ipconfig0 = "ip=192.168.1.102/24,gw=192.168.1.1"
#   }
#   "db" = {
#     name = "database-server"
#     vmid = 103
#     memory = 8192
#     disk_size = "50G"
#     ipconfig0 = "ip=192.168.1.103/24,gw=192.168.1.1"
#   }
# }

# Example 2: Kubernetes cluster nodes
# vms = {
#   "k8s-master" = {
#     name = "k8s-master-01"
#     vmid = 201
#     cpu_cores = 4
#     memory = 8192
#     disk_size = "50G"
#     ipconfig0 = "ip=192.168.2.10/24,gw=192.168.2.1"
#     tags = "kubernetes,master"
#   }
#   "k8s-worker-1" = {
#     name = "k8s-worker-01"
#     vmid = 202
#     cpu_cores = 4
#     memory = 16384
#     disk_size = "100G"
#     ipconfig0 = "ip=192.168.2.11/24,gw=192.168.2.1"
#     tags = "kubernetes,worker"
#   }
#   "k8s-worker-2" = {
#     name = "k8s-worker-02"
#     vmid = 203
#     cpu_cores = 4
#     memory = 16384
#     disk_size = "100G"
#     ipconfig0 = "ip=192.168.2.12/24,gw=192.168.2.1"
#     tags = "kubernetes,worker"
#   }
# }

# Example 3: Development environment (multiple apps)
# vms = {
#   "dev-frontend" = {
#     name = "dev-frontend"
#     description = "Development - React Frontend"
#     vmid = 301
#     template_name = "nodejs-template"
#     cpu_cores = 2
#     memory = 4096
#     ipconfig0 = "dhcp"
#     tags = "development,frontend,nodejs"
#   }
#   "dev-backend" = {
#     name = "dev-backend"  
#     description = "Development - Python API"
#     vmid = 302
#     template_name = "python-template"
#     cpu_cores = 2
#     memory = 4096
#     ipconfig0 = "dhcp"
#     tags = "development,backend,python"
#   }
#   "dev-database" = {
#     name = "dev-database"
#     description = "Development - PostgreSQL"
#     vmid = 303
#     template_name = "postgres-template"
#     memory = 4096
#     disk_size = "30G"
#     ipconfig0 = "dhcp"
#     tags = "development,database,postgresql"
#   }
# }